<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.house.housemanager.mapper.PaymentMapper">
  <resultMap id="BaseResultMap" type="com.house.housemanager.model.Payment">
    <result column="pay_id" jdbcType="VARCHAR" property="payId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="house_id" jdbcType="INTEGER" property="houseId" />
    <result column="pay_money" jdbcType="INTEGER" property="payMoney" />
    <result column="house_cast" jdbcType="INTEGER" property="houseCast" />
    <result column="pay_flag" jdbcType="BIT" property="payFlag" />
    <result column="pay_limit_date" jdbcType="DATE" property="payLimitDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pay_id, user_id, house_id, pay_money, house_cast, pay_flag, pay_limit_date
  </sql>
  <select id="selectByExample" parameterType="com.house.housemanager.model.PaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.house.housemanager.model.PaymentExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.house.housemanager.model.Payment">
    insert into payment (pay_id, user_id, house_id, 
      pay_money, house_cast, pay_flag, 
      pay_limit_date)
    values (#{payId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{houseId,jdbcType=INTEGER}, 
      #{payMoney,jdbcType=INTEGER}, #{houseCast,jdbcType=INTEGER}, #{payFlag,jdbcType=BIT}, 
      #{payLimitDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.house.housemanager.model.Payment">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        pay_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="houseId != null">
        house_id,
      </if>
      <if test="payMoney != null">
        pay_money,
      </if>
      <if test="houseCast != null">
        house_cast,
      </if>
      <if test="payFlag != null">
        pay_flag,
      </if>
      <if test="payLimitDate != null">
        pay_limit_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="houseCast != null">
        #{houseCast,jdbcType=INTEGER},
      </if>
      <if test="payFlag != null">
        #{payFlag,jdbcType=BIT},
      </if>
      <if test="payLimitDate != null">
        #{payLimitDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.house.housemanager.model.PaymentExample" resultType="java.lang.Long">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.payId != null">
        pay_id = #{record.payId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.payMoney != null">
        pay_money = #{record.payMoney,jdbcType=INTEGER},
      </if>
      <if test="record.houseCast != null">
        house_cast = #{record.houseCast,jdbcType=INTEGER},
      </if>
      <if test="record.payFlag != null">
        pay_flag = #{record.payFlag,jdbcType=BIT},
      </if>
      <if test="record.payLimitDate != null">
        pay_limit_date = #{record.payLimitDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set pay_id = #{record.payId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      house_id = #{record.houseId,jdbcType=INTEGER},
      pay_money = #{record.payMoney,jdbcType=INTEGER},
      house_cast = #{record.houseCast,jdbcType=INTEGER},
      pay_flag = #{record.payFlag,jdbcType=BIT},
      pay_limit_date = #{record.payLimitDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>