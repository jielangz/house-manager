<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.house.housemanager.mapper.HouseDetailsMapper">
  <resultMap id="BaseResultMap" type="com.house.housemanager.model.HouseDetails">
    <id column="house_details_id" jdbcType="BIGINT" property="houseDetailsId" />
    <result column="house_id" jdbcType="VARCHAR" property="houseId" />
    <result column="bed_flag" jdbcType="BIT" property="bedFlag" />
    <result column="sofa_flag" jdbcType="BIT" property="sofaFlag" />
    <result column="table_flag" jdbcType="BIT" property="tableFlag" />
    <result column="closet_flag" jdbcType="BIT" property="closetFlag" />
    <result column="room_number" jdbcType="INTEGER" property="roomNumber" />
    <result column="rest_room_flag" jdbcType="BIT" property="restRoomFlag" />
    <result column="other_details" jdbcType="VARCHAR" property="otherDetails" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    house_details_id, house_id, bed_flag, sofa_flag, table_flag, closet_flag, room_number, 
    rest_room_flag, other_details
  </sql>
  <select id="selectByExample" parameterType="com.house.housemanager.model.HouseDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house_details
    where house_details_id = #{houseDetailsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from house_details
    where house_details_id = #{houseDetailsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.house.housemanager.model.HouseDetailsExample">
    delete from house_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.house.housemanager.model.HouseDetails">
    insert into house_details (house_details_id, house_id, bed_flag, 
      sofa_flag, table_flag, closet_flag, 
      room_number, rest_room_flag, other_details
      )
    values (#{houseDetailsId,jdbcType=BIGINT}, #{houseId,jdbcType=VARCHAR}, #{bedFlag,jdbcType=BIT}, 
      #{sofaFlag,jdbcType=BIT}, #{tableFlag,jdbcType=BIT}, #{closetFlag,jdbcType=BIT}, 
      #{roomNumber,jdbcType=INTEGER}, #{restRoomFlag,jdbcType=BIT}, #{otherDetails,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.house.housemanager.model.HouseDetails">
    insert into house_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="houseDetailsId != null">
        house_details_id,
      </if>
      <if test="houseId != null">
        house_id,
      </if>
      <if test="bedFlag != null">
        bed_flag,
      </if>
      <if test="sofaFlag != null">
        sofa_flag,
      </if>
      <if test="tableFlag != null">
        table_flag,
      </if>
      <if test="closetFlag != null">
        closet_flag,
      </if>
      <if test="roomNumber != null">
        room_number,
      </if>
      <if test="restRoomFlag != null">
        rest_room_flag,
      </if>
      <if test="otherDetails != null">
        other_details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="houseDetailsId != null">
        #{houseDetailsId,jdbcType=BIGINT},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="bedFlag != null">
        #{bedFlag,jdbcType=BIT},
      </if>
      <if test="sofaFlag != null">
        #{sofaFlag,jdbcType=BIT},
      </if>
      <if test="tableFlag != null">
        #{tableFlag,jdbcType=BIT},
      </if>
      <if test="closetFlag != null">
        #{closetFlag,jdbcType=BIT},
      </if>
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="restRoomFlag != null">
        #{restRoomFlag,jdbcType=BIT},
      </if>
      <if test="otherDetails != null">
        #{otherDetails,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.house.housemanager.model.HouseDetailsExample" resultType="java.lang.Long">
    select count(*) from house_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update house_details
    <set>
      <if test="record.houseDetailsId != null">
        house_details_id = #{record.houseDetailsId,jdbcType=BIGINT},
      </if>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=VARCHAR},
      </if>
      <if test="record.bedFlag != null">
        bed_flag = #{record.bedFlag,jdbcType=BIT},
      </if>
      <if test="record.sofaFlag != null">
        sofa_flag = #{record.sofaFlag,jdbcType=BIT},
      </if>
      <if test="record.tableFlag != null">
        table_flag = #{record.tableFlag,jdbcType=BIT},
      </if>
      <if test="record.closetFlag != null">
        closet_flag = #{record.closetFlag,jdbcType=BIT},
      </if>
      <if test="record.roomNumber != null">
        room_number = #{record.roomNumber,jdbcType=INTEGER},
      </if>
      <if test="record.restRoomFlag != null">
        rest_room_flag = #{record.restRoomFlag,jdbcType=BIT},
      </if>
      <if test="record.otherDetails != null">
        other_details = #{record.otherDetails,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house_details
    set house_details_id = #{record.houseDetailsId,jdbcType=BIGINT},
      house_id = #{record.houseId,jdbcType=VARCHAR},
      bed_flag = #{record.bedFlag,jdbcType=BIT},
      sofa_flag = #{record.sofaFlag,jdbcType=BIT},
      table_flag = #{record.tableFlag,jdbcType=BIT},
      closet_flag = #{record.closetFlag,jdbcType=BIT},
      room_number = #{record.roomNumber,jdbcType=INTEGER},
      rest_room_flag = #{record.restRoomFlag,jdbcType=BIT},
      other_details = #{record.otherDetails,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.house.housemanager.model.HouseDetails">
    update house_details
    <set>
      <if test="houseId != null">
        house_id = #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="bedFlag != null">
        bed_flag = #{bedFlag,jdbcType=BIT},
      </if>
      <if test="sofaFlag != null">
        sofa_flag = #{sofaFlag,jdbcType=BIT},
      </if>
      <if test="tableFlag != null">
        table_flag = #{tableFlag,jdbcType=BIT},
      </if>
      <if test="closetFlag != null">
        closet_flag = #{closetFlag,jdbcType=BIT},
      </if>
      <if test="roomNumber != null">
        room_number = #{roomNumber,jdbcType=INTEGER},
      </if>
      <if test="restRoomFlag != null">
        rest_room_flag = #{restRoomFlag,jdbcType=BIT},
      </if>
      <if test="otherDetails != null">
        other_details = #{otherDetails,jdbcType=VARCHAR},
      </if>
    </set>
    where house_details_id = #{houseDetailsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.house.housemanager.model.HouseDetails">
    update house_details
    set house_id = #{houseId,jdbcType=VARCHAR},
      bed_flag = #{bedFlag,jdbcType=BIT},
      sofa_flag = #{sofaFlag,jdbcType=BIT},
      table_flag = #{tableFlag,jdbcType=BIT},
      closet_flag = #{closetFlag,jdbcType=BIT},
      room_number = #{roomNumber,jdbcType=INTEGER},
      rest_room_flag = #{restRoomFlag,jdbcType=BIT},
      other_details = #{otherDetails,jdbcType=VARCHAR}
    where house_details_id = #{houseDetailsId,jdbcType=BIGINT}
  </update>
</mapper>